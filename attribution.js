// Generated by CoffeeScript 1.7.1
(function() {
  var attribution_host, calc_attribution_data, distinct_analytics_id, get_cookie, get_first_referrer, get_first_utm, get_latest_referrer, get_latest_utm, get_option, guid, load_segment, main, merge, queryParams, set_cookie;

  get_first_referrer = function() {
    return {
      first_referrer: get_cookie('first_referrer') || get_latest_referrer()['latest_referrer']
    };
  };

  get_latest_referrer = function() {
    var attr_host, bad_host, latest_ref, our_host, ref;
    ref = document.referrer;
    attr_host = attribution_host(ref);
    bad_host = attr_host == null;
    our_host = attr_host === attribution_host(document.location);
    if ((ref == null) || our_host || bad_host) {
      latest_ref = get_cookie('latest_referrer');
    } else {
      latest_ref = attr_host;
    }
    return {
      latest_referrer: latest_ref
    };
  };

  get_first_utm = function() {
    var first, k, v, _ref;
    first = {
      first_utm_name: get_cookie('first_utm_source'),
      first_utm_source: get_cookie('first_utm_source'),
      first_utm_medium: get_cookie('first_utm_medium'),
      first_utm_term: get_cookie('first_utm_term'),
      first_utm_content: get_cookie('first_utm_content')
    };
    if (first['first_utm_name'] == null) {
      _ref = get_latest_utm();
      for (k in _ref) {
        v = _ref[k];
        first[k.replace('latest_', 'first_')] = v;
      }
    }
    return first;
  };

  get_latest_utm = function() {
    var content, medium, name, params, source, term;
    params = queryParams();
    name = params['utm_campaign'];
    source = params['utm_source'];
    medium = params['utm_medium'];
    term = params['utm_term'];
    content = params['utm_content'];
    if (name == null) {
      name = get_cookie('latest_utm_name');
      source = get_cookie('latest_utm_source');
      medium = get_cookie('latest_utm_medium');
      term = get_cookie('latest_utm_term');
      content = get_cookie('latest_utm_content');
    }
    return {
      latest_utm_name: name,
      latest_utm_source: source,
      latest_utm_medium: medium,
      latest_utm_term: term,
      latest_utm_content: content
    };
  };

  queryParams = function() {
    var query, result;
    query = document.location.search.substr(1);
    result = {};
    query.split("&").forEach(function(part) {
      var item;
      item = part.split("=");
      return result[item[0]] = decodeURIComponent(item[1]);
    });
    return result;
  };

  attribution_host = function(url) {
    var l;
    if ((url == null) || url === '') {
      return null;
    }
    if (String(url).indexOf('http') !== 0) {
      url = "http://" + url;
    }
    l = document.createElement("a");
    l.href = url;
    return l.hostname && l.hostname.replace(/^www\./i, '').toLowerCase();
  };

  get_option = function(key) {
    var defaults, options;
    defaults = {
      'cookie_domain': attribution_host(document.location),
      'identify_distinct_id': false
    };
    options = merge(defaults, window.attribution_tracking_options);
    return options[key];
  };

  set_cookie = function(name, value) {
    var domain, expires;
    expires = new Date((new Date()).getTime() + (30 * 1000 * 60 * 60 * 24));
    domain = get_option('cookie_domain');
    return document.cookie = [encodeURIComponent(name), '=', encodeURIComponent(JSON.stringify(value || null)), '; expires=' + expires.toUTCString(), '; domain=' + attribution_host(domain)].join('');
  };

  get_cookie = function(name) {
    var parsed, parts, value;
    value = "; " + document.cookie;
    parts = value.split("; " + name + "=");
    parsed = null;
    if (parts.length === 2) {
      try {
        parsed = JSON.parse(decodeURIComponent(parts.pop().split(";").shift()));
      } catch (_error) {}
      return parsed;
    } else {
      return null;
    }
  };

  merge = function(a, b) {
    var k, v;
    if (b == null) {
      b = {};
    }
    for (k in b) {
      v = b[k];
      a[k] = v;
    }
    return a;
  };

  guid = function() {
    var s4;
    s4 = function() {
      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
    };
    return "" + (s4()) + (s4()) + "-" + (s4()) + "-" + (s4()) + "-" + (s4()) + "-" + (s4()) + (s4()) + (s4());
  };

  distinct_analytics_id = function() {
    return get_cookie('distinct_analytics_id') || guid();
  };

  calc_attribution_data = function() {
    var attr_data, key, value;
    attr_data = {
      distinct_analytics_id: distinct_analytics_id()
    };
    merge(attr_data, get_first_utm());
    merge(attr_data, get_latest_utm());
    merge(attr_data, get_first_referrer());
    merge(attr_data, get_latest_referrer());
    window.current_attribution_data || (window.current_attribution_data = {});
    for (key in attr_data) {
      value = attr_data[key];
      set_cookie(key, value);
      window.current_attribution_data[key] = value;
    }
    return attr_data;
  };

  load_segment = function(key) {
    var analytics, m, t;
    if (key == null) {
      key = false;
    }
    if (!key) {
      return;
    }
    analytics = window.analytics = window.analytics || [];
    if (!analytics.initialize) {
      if (analytics.invoked) {
        return window.console && console.error && console.error('Segment snippet included twice.');
      } else {
        analytics.invoked = !0;
        analytics.methods = ['trackSubmit', 'trackClick', 'trackLink', 'trackForm', 'pageview', 'identify', 'group', 'track', 'ready', 'alias', 'page', 'once', 'off', 'on'];
        analytics.factory = function(t) {
          return function() {
            var e;
            e = void 0;
            e = Array.prototype.slice.call(arguments);
            e.unshift(t);
            analytics.push(e);
            return analytics;
          };
        };
        t = 0;
        while (t < analytics.methods.length) {
          m = analytics.methods[t];
          analytics[m] = analytics.factory(m);
          t++;
        }
        analytics.load = function(t) {
          var n, s;
          s = document.createElement('script');
          s.type = 'text/javascript';
          s.async = !0;
          s.src = ('https:' === document.location.protocol ? 'https://' : 'http://') + 'cdn.segment.com/analytics.js/v1/' + t + '/analytics.min.js';
          n = document.getElementsByTagName('script')[0];
          n.parentNode.insertBefore(s, n);
        };
        analytics.SNIPPET_VERSION = '3.0.1';
        return analytics.load(window.attribution_tracking_options.segment_key);
      }
    }
  };

  main = function() {
    calc_attribution_data();
    load_segment(window.attribution_tracking_options.segment_key);
    if (get_option('identify_distinct_id')) {
      analytics.identify(window.current_attribution_data.distinct_analytics_id, window.current_attribution_data);
    }
    analytics.track('Page View', {
      url: String(window.location),
      path: String(window.location.pathname),
      attribution: window.current_attribution_data
    });
    return analytics.page();
  };

  main();

}).call(this);
